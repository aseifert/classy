"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2762],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,f=u["".concat(l,".").concat(d)]||u[d]||p[d]||o;return n?a.createElement(f,r(r({ref:t},m),{},{components:n})):a.createElement(f,r({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4816:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return m},toc:function(){return p},default:function(){return d}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:2,title:"Changing Config"},l=void 0,c={unversionedId:"reference-manual/structured-configs/changing-config",id:"reference-manual/structured-configs/changing-config",title:"Changing Config",description:"Most .yaml configs used in classy simply define the parameters that are passed at construction time to actual Python",source:"@site/docs/reference-manual/structured-configs/changing-config.md",sourceDirName:"reference-manual/structured-configs",slug:"/reference-manual/structured-configs/changing-config",permalink:"/classy/docs/reference-manual/structured-configs/changing-config",editUrl:"https://github.com/sunglasses-ai/classy/edit/main/docs/reference-manual/structured-configs/changing-config.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Changing Config"},sidebar:"tutorialSidebar",previous:{title:"Overall Structure",permalink:"/classy/docs/reference-manual/structured-configs/overall-structure"},next:{title:"Visualizing your configuration",permalink:"/classy/docs/reference-manual/structured-configs/visualize"}},m={},p=[{value:"Changing values",id:"changing-values",level:2},{value:"Writing a new config",id:"writing-a-new-config",level:2},{value:"Lazy Instantiation",id:"lazy-instantiation",level:2}],u={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Most ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," configs used in ",(0,o.kt)("inlineCode",{parentName:"p"},"classy")," simply define the parameters that are passed at construction time to actual Python\nobjects. For instance, the following config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="configurations/model/token.yaml"',title:'"configurations/model/token.yaml"'},"_target_: 'classy.pl_modules.hf.HFTokensPLModule'\ntransformer_model: ${transformer_model}\nuse_last_n_layers: 1\nfine_tune: True\n")),(0,o.kt)("p",null,"refers to the instantiation of the following object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="classy/pl_modules/hf/classification.py"',title:'"classy/pl_modules/hf/classification.py"'},"class HFTokensPLModule(...):\n\n    def __init__(\n        self,\n        transformer_model: str,\n        use_last_n_layers: int,\n        fine_tune: bool,\n    ):\n        ...\n")),(0,o.kt)("p",null,"In particular, the ",(0,o.kt)("inlineCode",{parentName:"p"},"_target_")," property defines the object to be instantiated by specifying the Python module path to\nthe corresponding object."),(0,o.kt)("p",null,"To actually instantiate configs, you can use Hydra ",(0,o.kt)("inlineCode",{parentName:"p"},"instantiate")," method:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import hydra\n\n# conf is expected to be a DictConfig object (essentially a more powerful Python Dict loaded via OmegaConf); you don't need to care about this detail\nhydra.utils.instantiate(conf)\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"By default, the instantiation process is recursive. You can change this behavior with the ",(0,o.kt)("inlineCode",{parentName:"p"},"_recursive_")," parameter."))),(0,o.kt)("h2",{id:"changing-values"},"Changing values"),(0,o.kt)("p",null,"With this in mind, you can see how easy it is to change things. For instance, if you want to change the fine-tuning behavior\nas in the previous Section, you just need to change the ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="configurations/model/token.yaml"',title:'"configurations/model/token.yaml"'},"_target_: 'classy.pl_modules.hf.HFTokensPLModule'\ntransformer_model: ${transformer_model}\nuse_last_n_layers: 1\nfine_tune: False\n")),(0,o.kt)("p",null,"and this will reflect automatically on your instantiated HFTokensPLModule."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Having to enter the configuration folder, open the yaml file, edit the desired field and start the run every time\ncan be a bit of a nuisance, especially if you then have to revert your changes if you get worse results.\nTo avoid this, for simple modifications, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"-c")," option of classy train, to provide Hydra CLI overrides on params. For\ninstance, to change the fine-tuning strategy, ",(0,o.kt)("inlineCode",{parentName:"p"},"classy train ... -c model.fine_tune=False"),"."))),(0,o.kt)("h2",{id:"writing-a-new-config"},"Writing a new config"),(0,o.kt)("p",null,"Similarly, if you want to write a new config, perhaps specifying a new super-cool model, you just need to specify what to instantiate\n(the ",(0,o.kt)("inlineCode",{parentName:"p"},"_target_")," param) and how (the other params) to instantiate it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="configurations/model/model-new.yaml"',title:'"configurations/model/model-new.yaml"'},"_target_: <python-module-path-to-object>\nparam1: value1\nparam2: value2\n...\n")),(0,o.kt)("h2",{id:"lazy-instantiation"},"Lazy Instantiation"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This section involves fairly complex concepts. Feel free to skip it if you are not planning on extensively\nediting ",(0,o.kt)("inlineCode",{parentName:"p"},"classy")," configs for the moment."))),(0,o.kt)("p",null,"Things are usually as simple as described above. However, actual instantiation sometimes requires resources that you\ncannot specify in the ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," config. For instance, the actual configuration and code of ",(0,o.kt)("inlineCode",{parentName:"p"},"HFTokensPLModule")," is the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="configurations/model/token.yaml"',title:'"configurations/model/token.yaml"'},"_target_: 'classy.pl_modules.hf.HFTokensPLModule'\ntransformer_model: ${transformer_model}\nuse_last_n_layers: 1\nfine_tune: True\noptim_conf:\n  _target_: classy.optim.factories.RAdamWithDecayFactory\n  lr: 1e-5\n  weight_decay: 0.01\n  no_decay_params:\n    - bias\n    - LayerNorm.weight\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="classy/pl_modules/hf/token.py"',title:'"classy/pl_modules/hf/token.py"'},"class HFTokensPLModule(...):\n\n    def __init__(\n        self,\n        transformer_model: str,\n        use_last_n_layers: int,\n        fine_tune: bool,\n        vocabulary: Vocabulary,  # <--\n        optim_conf: omegaconf.DictConfig,\n    ):\n        ...\n")),(0,o.kt)("p",null,"with ",(0,o.kt)("inlineCode",{parentName:"p"},"__init__")," having two additional ",(0,o.kt)("em",{parentName:"p"},"problematic")," parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"vocabulary")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"optim_conf"))),(0,o.kt)("p",null,"On the one hand, ",(0,o.kt)("inlineCode",{parentName:"p"},"vocabulary")," is not something you usually know beforehand, as it will be automatically built by ",(0,o.kt)("inlineCode",{parentName:"p"},"classy")," itself.\nOn the other hand, ",(0,o.kt)("inlineCode",{parentName:"p"},"optim_conf")," is your optimizer configuration, whose instantiation involves instantiating a PyTorch optimizer;\nhowever, this latter operation is impossible as PyTorch optimizers take model parameters as input to their constructors,\nwhich you don't have yet as the model and its weights are exactly what you are trying to instantiate."),(0,o.kt)("p",null,"Yet, this code and configuration work, despite the missing ",(0,o.kt)("inlineCode",{parentName:"p"},"vocabulary")," field and the circle dependency with ",(0,o.kt)("inlineCode",{parentName:"p"},"optim_conf"),".\nThis is because, first, ",(0,o.kt)("inlineCode",{parentName:"p"},"classy")," knows it should pass the built vocabulary along the other instantiation params, and manually adds it\nwhen instantiating classy models."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When facing instantiation issues similar to this ",(0,o.kt)("inlineCode",{parentName:"p"},"vocabulary")," thing, you can apply this pattern to deal with them,\nmanually passing the additional parameter via kwargs to ",(0,o.kt)("inlineCode",{parentName:"p"},"hydra.utils.instantiate(...)"),"."))),(0,o.kt)("p",null,"Second, ",(0,o.kt)("inlineCode",{parentName:"p"},"classy")," disables recursive instantiation on models, meaning that ",(0,o.kt)("inlineCode",{parentName:"p"},"optim_conf")," will not be instantiated automatically.\nRather, ",(0,o.kt)("inlineCode",{parentName:"p"},"__init__")," will receive a DictConfig object and will have to take care itself of instantiating it."))}d.isMDXComponent=!0}}]);
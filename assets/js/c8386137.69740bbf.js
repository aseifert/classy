"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8625],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return k}});var l=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},s=Object.keys(e);for(l=0;l<s.length;l++)t=s[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(l=0;l<s.length;l++)t=s[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var o=l.createContext({}),d=function(e){var a=l.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=d(e.components);return l.createElement(o.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},p=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),p=d(t),k=n,m=p["".concat(o,".").concat(k)]||p[k]||u[k]||s;return t?l.createElement(m,i(i({ref:a},c),{},{components:t})):l.createElement(m,i({ref:a},c))}));function k(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var s=t.length,i=new Array(s);i[0]=p;var r={};for(var o in a)hasOwnProperty.call(a,o)&&(r[o]=a[o]);r.originalType=e,r.mdxType="string"==typeof e?e:n,i[1]=r;for(var d=2;d<s;d++)i[d]=t[d];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9688:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return r},contentTitle:function(){return o},metadata:function(){return d},assets:function(){return c},toc:function(){return u},default:function(){return k}});var l=t(7462),n=t(3366),s=(t(7294),t(3905)),i=["components"],r={title:"classy.pl_modules.hf.generation",toc_min_heading_level:2,toc_max_heading_level:4,pagination_next:null,pagination_prev:null},o=void 0,d={unversionedId:"api/pl_modules/hf/generation",id:"api/pl_modules/hf/generation",title:"classy.pl_modules.hf.generation",description:"Classes",source:"@site/docs/api/pl_modules/hf/generation.md",sourceDirName:"api/pl_modules/hf",slug:"/api/pl_modules/hf/generation",permalink:"/classy/docs/api/pl_modules/hf/generation",tags:[],version:"current",frontMatter:{title:"classy.pl_modules.hf.generation",toc_min_heading_level:2,toc_max_heading_level:4,pagination_next:null,pagination_prev:null},sidebar:"apiSidebar"},c={},u=[{value:"Classes",id:"clzs",level:2},{value:"BartGenerativeModule",id:"BartGenerativeModule",level:3},{value:"__init__",id:"BartGenerativeModule-init",level:4},{value:"batch_predict",id:"BartGenerativeModule-batch_predict",level:4},{value:"GPT2GenerativeModule",id:"GPT2GenerativeModule",level:3},{value:"__init__",id:"GPT2GenerativeModule-init",level:4},{value:"batch_predict",id:"GPT2GenerativeModule-batch_predict",level:4},{value:"HFGenerationPLModule",id:"HFGenerationPLModule",level:3},{value:"__init__",id:"HFGenerationPLModule-init",level:4},{value:"load_prediction_params",id:"HFGenerationPLModule-load_prediction_params",level:4},{value:"test_step",id:"HFGenerationPLModule-test_step",level:4},{value:"training_step",id:"HFGenerationPLModule-training_step",level:4},{value:"validation_step",id:"HFGenerationPLModule-validation_step",level:4},{value:"HFGenerativeModel",id:"HFGenerativeModel",level:3},{value:"__init__",id:"HFGenerativeModel-init",level:4},{value:"batch_predict",id:"HFGenerativeModel-batch_predict",level:4},{value:"forward",id:"HFGenerativeModel-forward",level:4},{value:"load_generation_params",id:"HFGenerativeModel-load_generation_params",level:4},{value:"from_transformer_model",id:"HFGenerativeModel-from_transformer_model",level:4},{value:"MBartGenerativeModule",id:"MBartGenerativeModule",level:3},{value:"__init__",id:"MBartGenerativeModule-init",level:4}],p={toc:u};function k(e){var a=e.components,t=(0,n.Z)(e,i);return(0,s.kt)("wrapper",(0,l.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"clzs"},"Classes"),(0,s.kt)("div",{className:"api"},(0,s.kt)("h3",{id:"BartGenerativeModule"},"BartGenerativeModule"),(0,s.kt)("div",{className:"api__signature"},(0,s.kt)("p",null,"class ",(0,s.kt)("span",{className:"ident"},"BartGenerativeModule"),"()"),(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#BartGenerativeModule",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L106-L185",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"},(0,s.kt)("p",null,"Base class for all neural network modules."),(0,s.kt)("p",null,"Your models should also subclass this class."),(0,s.kt)("p",null,"Modules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::"),(0,s.kt)("pre",null,(0,s.kt)("code",null,"import torch.nn as nn import torch.nn.functional as F",(0,s.kt)("p",null,"class Model(nn.Module):\ndef ",(0,s.kt)("strong",{parentName:"p"},"init"),"(self):\nsuper(Model, self).",(0,s.kt)("strong",{parentName:"p"},"init"),"()\nself.conv1 = nn.Conv2d(1, 20, 5)\nself.conv2 = nn.Conv2d(20, 20, 5)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"def forward(self, x):\n    x = F.relu(self.conv1(x))\n    return F.relu(self.conv2(x))\n")))),(0,s.kt)("p",null,"Submodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:",(0,s.kt)("code",null,"to"),", etc."),(0,s.kt)("p",null,":ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool"),(0,s.kt)("p",null,"Initializes internal Module state, shared by both nn.Module and ScriptModule.")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Subclasses (1)"),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{title:"MBartGenerativeModule",href:"/docs/api/pl_modules/hf/generation#MBartGenerativeModule"},"MBartGenerativeModule"))))),(0,s.kt)("h4",{id:"BartGenerativeModule-init"},"_","_","init","_","_"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"__init__"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_skip_special_tokens:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_clean_up_tokenization_spaces:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]]\xa0=\xa0None,",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#BartGenerativeModule-init",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L106-L185",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__description"}),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"BartGenerativeModule-batch_predict"},"batch_predict"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"batch_predict"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0input_ids:\xa0torch.Tensor,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0attention_mask:\xa0torch.Tensor,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoder_start:\xa0torch.Tensor,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0num_return_sequences:\xa0int\xa0=\xa01,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,s.kt)("br",null),") \u2011>\xa0Iterator[",(0,s.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),"]",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#BartGenerativeModule-batch_predict",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L157-L185",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h3",{id:"GPT2GenerativeModule"},"GPT2GenerativeModule"),(0,s.kt)("div",{className:"api__signature"},(0,s.kt)("p",null,"class ",(0,s.kt)("span",{className:"ident"},"GPT2GenerativeModule"),"()"),(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#GPT2GenerativeModule",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L194-L267",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"},(0,s.kt)("p",null,"Base class for all neural network modules."),(0,s.kt)("p",null,"Your models should also subclass this class."),(0,s.kt)("p",null,"Modules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::"),(0,s.kt)("pre",null,(0,s.kt)("code",null,"import torch.nn as nn import torch.nn.functional as F",(0,s.kt)("p",null,"class Model(nn.Module):\ndef ",(0,s.kt)("strong",{parentName:"p"},"init"),"(self):\nsuper(Model, self).",(0,s.kt)("strong",{parentName:"p"},"init"),"()\nself.conv1 = nn.Conv2d(1, 20, 5)\nself.conv2 = nn.Conv2d(20, 20, 5)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"def forward(self, x):\n    x = F.relu(self.conv1(x))\n    return F.relu(self.conv2(x))\n")))),(0,s.kt)("p",null,"Submodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:",(0,s.kt)("code",null,"to"),", etc."),(0,s.kt)("p",null,":ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool"),(0,s.kt)("p",null,"Initializes internal Module state, shared by both nn.Module and ScriptModule.")),(0,s.kt)("h4",{id:"GPT2GenerativeModule-init"},"_","_","init","_","_"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"__init__"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_skip_special_tokens:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_clean_up_tokenization_spaces:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]]\xa0=\xa0None,",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#GPT2GenerativeModule-init",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L194-L267",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__description"}),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"GPT2GenerativeModule-batch_predict"},"batch_predict"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"batch_predict"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0input_ids:\xa0torch.Tensor,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0attention_mask:\xa0torch.Tensor,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0num_return_sequences:\xa0int\xa0=\xa01,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,s.kt)("br",null),") \u2011>\xa0Iterator[Tuple[",(0,s.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),",\xa0str]]",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#GPT2GenerativeModule-batch_predict",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L244-L267",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h3",{id:"HFGenerationPLModule"},"HFGenerationPLModule"),(0,s.kt)("div",{className:"api__signature"},(0,s.kt)("p",null,"class ",(0,s.kt)("span",{className:"ident"},"HFGenerationPLModule"),"()"),(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerationPLModule",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L14-L72",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"},(0,s.kt)("p",null,"Simple Mixin to model the prediction behavior of a classy.pl_modules.base.ClassyPLModule.")),(0,s.kt)("h4",{id:"HFGenerationPLModule-init"},"_","_","init","_","_"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"__init__"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_skip_special_tokens:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_clean_up_tokenization_spaces:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0optim_conf:\xa0omegaconf.dictconfig.DictConfig,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]]\xa0=\xa0None,",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerationPLModule-init",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L14-L72",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__description"}),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerationPLModule-load_prediction_params"},"load_prediction_params"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"load_prediction_params"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0prediction_params:\xa0Dict[~KT,\xa0~VT],",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerationPLModule-load_prediction_params",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L32-L33",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerationPLModule-test_step"},"test_step"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"test_step"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0batch:\xa0dict,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0batch_idx:\xa0int,",(0,s.kt)("br",null),") \u2011>\xa0None",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerationPLModule-test_step",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L58-L69",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerationPLModule-training_step"},"training_step"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"training_step"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0batch:\xa0dict,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0batch_idx:\xa0int,",(0,s.kt)("br",null),") \u2011>\xa0torch.Tensor",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerationPLModule-training_step",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L38-L43",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerationPLModule-validation_step"},"validation_step"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"validation_step"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0batch:\xa0dict,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0batch_idx:\xa0int,",(0,s.kt)("br",null),") \u2011>\xa0None",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerationPLModule-validation_step",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L45-L56",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h3",{id:"HFGenerativeModel"},"HFGenerativeModel"),(0,s.kt)("div",{className:"api__signature"},(0,s.kt)("p",null,"class ",(0,s.kt)("span",{className:"ident"},"HFGenerativeModel"),"(torch.nn.modules.module.Module)"),(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerativeModel",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L75-L103",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"},(0,s.kt)("p",null,"Base class for all neural network modules."),(0,s.kt)("p",null,"Your models should also subclass this class."),(0,s.kt)("p",null,"Modules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::"),(0,s.kt)("pre",null,(0,s.kt)("code",null,"import torch.nn as nn import torch.nn.functional as F",(0,s.kt)("p",null,"class Model(nn.Module):\ndef ",(0,s.kt)("strong",{parentName:"p"},"init"),"(self):\nsuper(Model, self).",(0,s.kt)("strong",{parentName:"p"},"init"),"()\nself.conv1 = nn.Conv2d(1, 20, 5)\nself.conv2 = nn.Conv2d(20, 20, 5)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"def forward(self, x):\n    x = F.relu(self.conv1(x))\n    return F.relu(self.conv2(x))\n")))),(0,s.kt)("p",null,"Submodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:",(0,s.kt)("code",null,"to"),", etc."),(0,s.kt)("p",null,":ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool"),(0,s.kt)("p",null,"Initializes internal Module state, shared by both nn.Module and ScriptModule.")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Subclasses (2)"),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{title:"BartGenerativeModule",href:"/docs/api/pl_modules/hf/generation#BartGenerativeModule"},"BartGenerativeModule")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{title:"GPT2GenerativeModule",href:"/docs/api/pl_modules/hf/generation#GPT2GenerativeModule"},"GPT2GenerativeModule"))))),(0,s.kt)("h4",{id:"HFGenerativeModel-init"},"_","_","init","_","_"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"__init__"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_skip_special_tokens:\xa0bool,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0decoding_clean_up_tokenization_spaces:\xa0bool,",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerativeModel-init",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L75-L103",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__description"}),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerativeModel-batch_predict"},"batch_predict"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"batch_predict"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0*args,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,s.kt)("br",null),") \u2011>\xa0Iterator[Tuple[",(0,s.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),",\xa0str]]",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerativeModel-batch_predict",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L102-L103",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerativeModel-forward"},"forward"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"forward"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0*args,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,s.kt)("br",null),") \u2011>\xa0",(0,s.kt)("a",{title:"ClassificationOutput",href:"/docs/api/pl_modules/base#ClassificationOutput"},"ClassificationOutput"),(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerativeModel-forward",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L99-L100",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"},(0,s.kt)("p",null,"Defines the computation performed at every call."),(0,s.kt)("p",null,"Should be overridden by all subclasses."),(0,s.kt)("div",{class:"admonition note"},(0,s.kt)("p",{class:"admonition-title"},"Note"),(0,s.kt)("p",null,"Although the recipe for forward pass needs to be defined within this function, one should call the :class:",(0,s.kt)("code",null,"Module")," instance afterwards instead of this since the former takes care of running the registered hooks while the latter silently ignores them."))))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerativeModel-load_generation_params"},"load_generation_params"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"load_generation_params"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0generation_params:\xa0Dict[~KT,\xa0~VT],",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerativeModel-load_generation_params",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L96-L97",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h4",{id:"HFGenerativeModel-from_transformer_model"},"from_transformer_model"),(0,s.kt)("div",{className:"api__signature"},(0,s.kt)("div",{className:"annotation"},"@classmethod"),"def ",(0,s.kt)("span",{className:"ident"},"from_transformer_model"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#HFGenerativeModel-from_transformer_model",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L76-L85",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"}))))),(0,s.kt)("div",{className:"api"},(0,s.kt)("h3",{id:"MBartGenerativeModule"},"MBartGenerativeModule"),(0,s.kt)("div",{className:"api__signature"},(0,s.kt)("p",null,"class ",(0,s.kt)("span",{className:"ident"},"MBartGenerativeModule"),"()"),(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#MBartGenerativeModule",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L188-L191",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__body"},(0,s.kt)("div",{className:"api__description"},(0,s.kt)("p",null,"Base class for all neural network modules."),(0,s.kt)("p",null,"Your models should also subclass this class."),(0,s.kt)("p",null,"Modules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::"),(0,s.kt)("pre",null,(0,s.kt)("code",null,"import torch.nn as nn import torch.nn.functional as F",(0,s.kt)("p",null,"class Model(nn.Module):\ndef ",(0,s.kt)("strong",{parentName:"p"},"init"),"(self):\nsuper(Model, self).",(0,s.kt)("strong",{parentName:"p"},"init"),"()\nself.conv1 = nn.Conv2d(1, 20, 5)\nself.conv2 = nn.Conv2d(20, 20, 5)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"def forward(self, x):\n    x = F.relu(self.conv1(x))\n    return F.relu(self.conv2(x))\n")))),(0,s.kt)("p",null,"Submodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:",(0,s.kt)("code",null,"to"),", etc."),(0,s.kt)("p",null,":ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool"),(0,s.kt)("p",null,"Initializes internal Module state, shared by both nn.Module and ScriptModule.")),(0,s.kt)("h4",{id:"MBartGenerativeModule-init"},"_","_","init","_","_"),(0,s.kt)("div",{className:"api__signature"},"def ",(0,s.kt)("span",{className:"ident"},"__init__"),"(",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0*args,",(0,s.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,s.kt)("br",null),")",(0,s.kt)("div",{className:"links-div"},(0,s.kt)("a",{href:"#MBartGenerativeModule-init",className:"direct-link"},"#"),(0,s.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/hf/generation.py#L188-L191",className:"git-link"},"#"))),(0,s.kt)("div",{className:"api__description"}))))}k.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8305],{3905:function(e,t,i){i.d(t,{Zo:function(){return d},kt:function(){return m}});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)i=l[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)i=l[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var o=a.createContext({}),c=function(e){var t=a.useContext(o),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},d=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(i),m=n,f=u["".concat(o,".").concat(m)]||u[m]||p[m]||l;return i?a.createElement(f,r(r({ref:t},d),{},{components:i})):a.createElement(f,r({ref:t},d))}));function m(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=i.length,r=new Array(l);r[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var c=2;c<l;c++)r[c]=i[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},1975:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return c},assets:function(){return d},toc:function(){return p},default:function(){return m}});var a=i(7462),n=i(3366),l=(i(7294),i(3905)),r=["components"],s={title:"classy.pl_modules.mixins.prediction",toc_min_heading_level:2,toc_max_heading_level:4,pagination_next:null,pagination_prev:null},o=void 0,c={unversionedId:"api/pl_modules/mixins/prediction",id:"api/pl_modules/mixins/prediction",title:"classy.pl_modules.mixins.prediction",description:"Classes",source:"@site/docs/api/pl_modules/mixins/prediction.md",sourceDirName:"api/pl_modules/mixins",slug:"/api/pl_modules/mixins/prediction",permalink:"/classy/docs/api/pl_modules/mixins/prediction",tags:[],version:"current",frontMatter:{title:"classy.pl_modules.mixins.prediction",toc_min_heading_level:2,toc_max_heading_level:4,pagination_next:null,pagination_prev:null},sidebar:"apiSidebar"},d={},p=[{value:"Classes",id:"clzs",level:2},{value:"PredictionMixin",id:"PredictionMixin",level:3},{value:"batch_predict",id:"PredictionMixin-batch_predict",level:4},{value:"predict",id:"PredictionMixin-predict",level:4}],u={toc:p};function m(e){var t=e.components,i=(0,n.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"clzs"},"Classes"),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"PredictionMixin"},"PredictionMixin"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"PredictionMixin"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#PredictionMixin",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/mixins/prediction.py#L14-L92",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"},(0,l.kt)("p",null,"Simple Mixin to model the prediction behavior of a classy.pl_modules.base.ClassyPLModule.")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Subclasses (1)"),(0,l.kt)("div",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{title:"ClassyPLModule",href:"/docs/api/pl_modules/base#ClassyPLModule"},"ClassyPLModule"))))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"PredictionMixin-batch_predict"},"batch_predict"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"batch_predict"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0*args,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,l.kt)("br",null),") \u2011>\xa0Iterator[",(0,l.kt)("a",{title:"ClassySample",href:"/docs/api/data/data_drivers#ClassySample"},"ClassySample"),"]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#PredictionMixin-batch_predict",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/mixins/prediction.py#L84-L92",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"},(0,l.kt)("p",null,"General method that must be implemented by each classy.pl_modules.base.ClassyPLModule in order to perform batch prediction."),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,"An iterator over a collection of samples with the predicted annotation updated with the model outputs.")))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"PredictionMixin-predict"},"predict"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"predict"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0samples:\xa0Iterator[",(0,l.kt)("a",{title:"ClassySample",href:"/docs/api/data/data_drivers#ClassySample"},"ClassySample"),"],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0dataset_conf:\xa0Union[Dict[~KT,\xa0~VT],\xa0omegaconf.dictconfig.DictConfig],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0token_batch_size:\xa0int\xa0=\xa01024,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0progress_bar:\xa0bool\xa0=\xa0False,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0**kwargs,",(0,l.kt)("br",null),") \u2011>\xa0Iterator[",(0,l.kt)("a",{title:"ClassySample",href:"/docs/api/data/data_drivers#ClassySample"},"ClassySample"),"]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#PredictionMixin-predict",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/pl_modules/mixins/prediction.py#L19-L82",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"},(0,l.kt)("p",null,"Exposed method of each classy.pl_modules.base.ClassyPLModule invoked to annotate a collection of input samples."),(0,l.kt)("h5",{id:"args"},"Args"),(0,l.kt)("dl",null,(0,l.kt)("dt",null,(0,l.kt)("code",null,"samples")),(0,l.kt)("dd",null,"iterator over the samples that have to be annotated."),(0,l.kt)("dt",null,(0,l.kt)("code",null,"dataset_conf")),(0,l.kt)("dd",null,"the dataset configuration used to instantiate the Dataset with hydra."),(0,l.kt)("dt",null,(0,l.kt)("code",null,"token_batch_size")),(0,l.kt)("dd",null,"the maximum number of tokens in each batch."),(0,l.kt)("dt",null,(0,l.kt)("code",null,"progress_bar")),(0,l.kt)("dd",null,"whether or not to show a progress bar of the prediction process."),(0,l.kt)("dt",null,(0,l.kt)("code",null,"**kwargs")),(0,l.kt)("dd",null,"additional parameters. (Future proof atm)")),(0,l.kt)("h5",{id:"returns"},"Returns"),(0,l.kt)("p",null,"An iterator over the input samples with the predicted annotation updated.")))))))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9665],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return k}});var s=t(7294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,s)}return t}function n(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,s,i=function(e,a){if(null==e)return{};var t,s,i={},l=Object.keys(e);for(s=0;s<l.length;s++)t=l[s],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(s=0;s<l.length;s++)t=l[s],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=s.createContext({}),o=function(e){var a=s.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):n(n({},a),e)),t},d=function(e){var a=o(e.components);return s.createElement(c.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},_=s.forwardRef((function(e,a){var t=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),_=o(t),k=i,p=_["".concat(c,".").concat(k)]||_[k]||m[k]||l;return t?s.createElement(p,n(n({ref:a},d),{},{components:t})):s.createElement(p,n({ref:a},d))}));function k(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=t.length,n=new Array(l);n[0]=_;var r={};for(var c in a)hasOwnProperty.call(a,c)&&(r[c]=a[c]);r.originalType=e,r.mdxType="string"==typeof e?e:i,n[1]=r;for(var o=2;o<l;o++)n[o]=t[o];return s.createElement.apply(null,n)}return s.createElement.apply(null,t)}_.displayName="MDXCreateElement"},7576:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return r},contentTitle:function(){return c},metadata:function(){return o},assets:function(){return d},toc:function(){return m},default:function(){return k}});var s=t(7462),i=t(3366),l=(t(7294),t(3905)),n=["components"],r={title:"classy.data.dataset.hf.generation",toc_min_heading_level:2,toc_max_heading_level:4,pagination_next:null,pagination_prev:null},c=void 0,o={unversionedId:"api/data/dataset/hf/generation",id:"api/data/dataset/hf/generation",title:"classy.data.dataset.hf.generation",description:"Classes",source:"@site/docs/api/data/dataset/hf/generation.md",sourceDirName:"api/data/dataset/hf",slug:"/api/data/dataset/hf/generation",permalink:"/classy/docs/api/data/dataset/hf/generation",tags:[],version:"current",frontMatter:{title:"classy.data.dataset.hf.generation",toc_min_heading_level:2,toc_max_heading_level:4,pagination_next:null,pagination_prev:null},sidebar:"apiSidebar"},d={},m=[{value:"Classes",id:"clzs",level:2},{value:"BartHFGenerationSampleEncoder",id:"BartHFGenerationSampleEncoder",level:3},{value:"__init__",id:"BartHFGenerationSampleEncoder-init",level:4},{value:"get_fields_batcher",id:"BartHFGenerationSampleEncoder-get_fields_batcher",level:4},{value:"sample2elem_dict",id:"BartHFGenerationSampleEncoder-sample2elem_dict",level:4},{value:"DecHFGenerationSampleEncoder",id:"DecHFGenerationSampleEncoder",level:3},{value:"__init__",id:"DecHFGenerationSampleEncoder-init",level:4},{value:"get_batching_fields",id:"DecHFGenerationSampleEncoder-get_batching_fields",level:4},{value:"group_elements_on_materializations",id:"DecHFGenerationSampleEncoder-group_elements_on_materializations",level:4},{value:"EncDecHFGenerationSampleEncoder",id:"EncDecHFGenerationSampleEncoder",level:3},{value:"__init__",id:"EncDecHFGenerationSampleEncoder-init",level:4},{value:"get_batching_fields",id:"EncDecHFGenerationSampleEncoder-get_batching_fields",level:4},{value:"GPT2HFGenerationSampleEcnoder",id:"GPT2HFGenerationSampleEcnoder",level:3},{value:"__init__",id:"GPT2HFGenerationSampleEcnoder-init",level:4},{value:"get_fields_batcher",id:"GPT2HFGenerationSampleEcnoder-get_fields_batcher",level:4},{value:"sample2elem_dict",id:"GPT2HFGenerationSampleEcnoder-sample2elem_dict",level:4},{value:"HFGenerationDataset",id:"HFGenerationDataset",level:3},{value:"__init__",id:"HFGenerationDataset-init",level:4},{value:"dataset_iterator_func",id:"HFGenerationDataset-dataset_iterator_func",level:4},{value:"materialize_batches",id:"HFGenerationDataset-materialize_batches",level:4},{value:"fit_vocabulary",id:"HFGenerationDataset-fit_vocabulary",level:4},{value:"requires_vocab",id:"HFGenerationDataset-requires_vocab",level:4},{value:"HFGenerationSampleEncoder",id:"HFGenerationSampleEncoder",level:3},{value:"__init__",id:"HFGenerationSampleEncoder-init",level:4},{value:"get_batching_fields",id:"HFGenerationSampleEncoder-get_batching_fields",level:4},{value:"get_fields_batcher",id:"HFGenerationSampleEncoder-get_fields_batcher",level:4},{value:"get_tokenizer_max_length",id:"HFGenerationSampleEncoder-get_tokenizer_max_length",level:4},{value:"group_elements_on_materializations",id:"HFGenerationSampleEncoder-group_elements_on_materializations",level:4},{value:"sample2elem_dict",id:"HFGenerationSampleEncoder-sample2elem_dict",level:4},{value:"from_transformer_model",id:"HFGenerationSampleEncoder-from_transformer_model",level:4},{value:"MBARTHFGenerationSampleEncoder",id:"MBARTHFGenerationSampleEncoder",level:3},{value:"__init__",id:"MBARTHFGenerationSampleEncoder-init",level:4},{value:"group_elements_on_materializations",id:"MBARTHFGenerationSampleEncoder-group_elements_on_materializations",level:4},{value:"sample2elem_dict",id:"MBARTHFGenerationSampleEncoder-sample2elem_dict",level:4}],_={toc:m};function k(e){var a=e.components,t=(0,i.Z)(e,n);return(0,l.kt)("wrapper",(0,s.Z)({},_,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"clzs"},"Classes"),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"BartHFGenerationSampleEncoder"},"BartHFGenerationSampleEncoder"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"BartHFGenerationSampleEncoder"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#BartHFGenerationSampleEncoder",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L178-L228",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Subclasses (1)"),(0,l.kt)("div",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{title:"MBARTHFGenerationSampleEncoder",href:"/docs/api/data/dataset/hf/generation#MBARTHFGenerationSampleEncoder"},"MBARTHFGenerationSampleEncoder"))))),(0,l.kt)("h4",{id:"BartHFGenerationSampleEncoder-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#BartHFGenerationSampleEncoder-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L178-L228",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"BartHFGenerationSampleEncoder-get_fields_batcher"},"get_fields_batcher"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_fields_batcher"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Callable]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#BartHFGenerationSampleEncoder-get_fields_batcher",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L179-L193",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"BartHFGenerationSampleEncoder-sample2elem_dict"},"sample2elem_dict"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"sample2elem_dict"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0sample:\xa0",(0,l.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),",",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Any]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#BartHFGenerationSampleEncoder-sample2elem_dict",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L195-L228",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"DecHFGenerationSampleEncoder"},"DecHFGenerationSampleEncoder"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"DecHFGenerationSampleEncoder"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#DecHFGenerationSampleEncoder",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L158-L175",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Subclasses (1)"),(0,l.kt)("div",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{title:"GPT2HFGenerationSampleEcnoder",href:"/docs/api/data/dataset/hf/generation#GPT2HFGenerationSampleEcnoder"},"GPT2HFGenerationSampleEcnoder"))))),(0,l.kt)("h4",{id:"DecHFGenerationSampleEncoder-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#DecHFGenerationSampleEncoder-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L158-L175",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"DecHFGenerationSampleEncoder-get_batching_fields"},"get_batching_fields"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_batching_fields"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0List[str]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#DecHFGenerationSampleEncoder-get_batching_fields",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L159-L160",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"DecHFGenerationSampleEncoder-group_elements_on_materializations"},"group_elements_on_materializations"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"group_elements_on_materializations"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0dataset_elements:\xa0List[Dict[str,\xa0Any]],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0List[List[Dict[str,\xa0Any]]]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#DecHFGenerationSampleEncoder-group_elements_on_materializations",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L162-L175",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"EncDecHFGenerationSampleEncoder"},"EncDecHFGenerationSampleEncoder"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"EncDecHFGenerationSampleEncoder"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#EncDecHFGenerationSampleEncoder",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L153-L155",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Subclasses (1)"),(0,l.kt)("div",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{title:"BartHFGenerationSampleEncoder",href:"/docs/api/data/dataset/hf/generation#BartHFGenerationSampleEncoder"},"BartHFGenerationSampleEncoder"))))),(0,l.kt)("h4",{id:"EncDecHFGenerationSampleEncoder-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#EncDecHFGenerationSampleEncoder-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L153-L155",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"EncDecHFGenerationSampleEncoder-get_batching_fields"},"get_batching_fields"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_batching_fields"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0List[str]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#EncDecHFGenerationSampleEncoder-get_batching_fields",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L154-L155",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"GPT2HFGenerationSampleEcnoder"},"GPT2HFGenerationSampleEcnoder"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"GPT2HFGenerationSampleEcnoder"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#GPT2HFGenerationSampleEcnoder",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L296-L351",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("h4",{id:"GPT2HFGenerationSampleEcnoder-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#GPT2HFGenerationSampleEcnoder-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L296-L351",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"GPT2HFGenerationSampleEcnoder-get_fields_batcher"},"get_fields_batcher"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_fields_batcher"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Callable]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#GPT2HFGenerationSampleEcnoder-get_fields_batcher",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L297-L307",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"GPT2HFGenerationSampleEcnoder-sample2elem_dict"},"sample2elem_dict"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"sample2elem_dict"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0sample:\xa0",(0,l.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),",",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Any]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#GPT2HFGenerationSampleEcnoder-sample2elem_dict",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L309-L351",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"HFGenerationDataset"},"HFGenerationDataset"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"HFGenerationDataset"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationDataset",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L34-L90",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"},(0,l.kt)("p",null,"An iterable Dataset."),(0,l.kt)("p",null,"All datasets that represent an iterable of data samples should subclass it. Such form of datasets is particularly useful when data come from a stream."),(0,l.kt)("p",null,"All subclasses should overwrite :meth:",(0,l.kt)("code",null,"__iter__"),", which would return an iterator of samples in this dataset."),(0,l.kt)("p",null,"When a subclass is used with :class:",(0,l.kt)("code",null,"~torch.utils.data.DataLoader"),", each item in the dataset will be yielded from the :class:",(0,l.kt)("code",null,"~torch.utils.data.DataLoader"),"iterator. When :attr:",(0,l.kt)("code",null,"num_workers > 0"),", each worker process will have a different copy of the dataset object, so it is often desired to configure each copy independently to avoid having duplicate data returned from the workers. :func:",(0,l.kt)("code",null,"~torch.utils.data.get_worker_info"),", when called in a worker process, returns information about the worker. It can be used in either the dataset's :meth:",(0,l.kt)("code",null,"__iter__")," method or the :class:",(0,l.kt)("code",null,"~torch.utils.data.DataLoader")," 's :attr:",(0,l.kt)("code",null,"worker_init_fn")," option to modify each copy's behavior."),(0,l.kt)("p",null,"Example 1: splitting workload across all workers in :meth:",(0,l.kt)("code",null,"__iter__"),"::"),(0,l.kt)("pre",null,(0,l.kt)("code",null,'>>> class MyIterableDataset(torch.utils.data.IterableDataset): ...     def __init__(self, start, end): ...         super(MyIterableDataset).__init__() ...         assert end > start, "this example code only works with end >= start" ...         self.start = start ...         self.end = end ... ...     def __iter__(self): ...         worker_info = torch.utils.data.get_worker_info() ...         if worker_info is None:  # single-process data loading, return the full iterator ...             iter_start = self.start ...             iter_end = self.end ...         else:  # in a worker process ...             # split workload ...             per_worker = int(math.ceil((self.end - self.start) / float(worker_info.num_workers))) ...             worker_id = worker_info.id ...             iter_start = self.start + worker_id * per_worker ...             iter_end = min(iter_start + per_worker, self.end) ...         return iter(range(iter_start, iter_end)) ... >>> # should give same set of data as range(3, 7), i.e., [3, 4, 5, 6]. >>> ds = MyIterableDataset(start=3, end=7)',(0,l.kt)("p",null,">",">",">"," # Single-process loading\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=0)))\n","[3, 4, 5, 6]"),(0,l.kt)("p",null,">",">",">"," # Mult-process loading with two worker processes\n",">",">",">"," # Worker 0 fetched ","[3, 4]",".  Worker 1 fetched ","[5, 6]",".\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=2)))\n","[3, 5, 4, 6]"),(0,l.kt)("p",null,">",">",">"," # With even more workers\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=20)))\n","[3, 4, 5, 6]"))),(0,l.kt)("p",null,"Example 2: splitting workload across all workers using :attr:",(0,l.kt)("code",null,"worker_init_fn"),"::"),(0,l.kt)("pre",null,(0,l.kt)("code",null,'>>> class MyIterableDataset(torch.utils.data.IterableDataset): ...     def __init__(self, start, end): ...         super(MyIterableDataset).__init__() ...         assert end > start, "this example code only works with end >= start" ...         self.start = start ...         self.end = end ... ...     def __iter__(self): ...         return iter(range(self.start, self.end)) ... >>> # should give same set of data as range(3, 7), i.e., [3, 4, 5, 6]. >>> ds = MyIterableDataset(start=3, end=7)',(0,l.kt)("p",null,">",">",">"," # Single-process loading\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=0)))\n","[3, 4, 5, 6]","\n",">",">",">","\n",">",">",">"," # Directly doing multi-process loading yields duplicate data\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=2)))\n","[3, 3, 4, 4, 5, 5, 6, 6]"),(0,l.kt)("p",null,">",">",">"," # Define a ","<","code",">","worker","_","init","_","fn","<","/code",">"," that configures each dataset copy differently\n",">",">",">"," def worker_init_fn(worker_id):\n...     worker_info = torch.utils.data.get_worker_info()\n...     dataset = worker_info.dataset  # the dataset copy in this worker process\n...     overall_start = dataset.start\n...     overall_end = dataset.end\n...     # configure the dataset to only process the split workload\n...     per_worker = int(math.ceil((overall_end - overall_start) / float(worker_info.num_workers)))\n...     worker_id = worker_info.id\n...     dataset.start = overall_start + worker_id * per_worker\n...     dataset.end = min(dataset.start + per_worker, overall_end)\n..."),(0,l.kt)("p",null,">",">",">"," # Mult-process loading with the custom ","<","code",">","worker","_","init","_","fn","<","/code",">","\n",">",">",">"," # Worker 0 fetched ","[3, 4]",".  Worker 1 fetched ","[5, 6]",".\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=2, worker_init_fn=worker_init_fn)))\n","[3, 5, 4, 6]"),(0,l.kt)("p",null,">",">",">"," # With even more workers\n",">",">",">"," print(list(torch.utils.data.DataLoader(ds, num_workers=20, worker_init_fn=worker_init_fn)))\n","[3, 4, 5, 6]")))),(0,l.kt)("h4",{id:"HFGenerationDataset-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0samples_iterator:\xa0Callable[[],\xa0Iterator[",(0,l.kt)("a",{title:"ClassySample",href:"/docs/api/data/data_drivers#ClassySample"},"ClassySample"),"]],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0vocabulary:\xa0",(0,l.kt)("a",{title:"Vocabulary",href:"/docs/api/utils/vocabulary#Vocabulary"},"Vocabulary"),",",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0tokens_per_batch:\xa0int,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0max_batch_size:\xa0Optional[int],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0section_size:\xa0int,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0prebatch:\xa0bool,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0materialize:\xa0bool,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0min_length:\xa0int,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0max_length:\xa0int,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0for_inference:\xa0bool,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]]\xa0=\xa0None,",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationDataset-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L34-L90",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationDataset-dataset_iterator_func"},"dataset_iterator_func"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"dataset_iterator_func"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),") \u2011>\xa0Iterable[Dict[str,\xa0Any]]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationDataset-dataset_iterator_func",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L78-L82",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationDataset-materialize_batches"},"materialize_batches"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"materialize_batches"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0dataset_elements:\xa0List[Dict[str,\xa0Any]],",(0,l.kt)("br",null),") \u2011>\xa0Generator[Dict[str,\xa0Any],\xa0None,\xa0None]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationDataset-materialize_batches",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L84-L90",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationDataset-fit_vocabulary"},"fit_vocabulary"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("div",{className:"annotation"},"@classmethod"),"def ",(0,l.kt)("span",{className:"ident"},"fit_vocabulary"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0samples:\xa0Iterator[",(0,l.kt)("a",{title:"ClassySample",href:"/docs/api/data/data_drivers#ClassySample"},"ClassySample"),"],",(0,l.kt)("br",null),") \u2011>\xa0",(0,l.kt)("a",{title:"Vocabulary",href:"/docs/api/utils/vocabulary#Vocabulary"},"Vocabulary"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationDataset-fit_vocabulary",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L39-L41",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationDataset-requires_vocab"},"requires_vocab"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("div",{className:"annotation"},"@classmethod"),"def ",(0,l.kt)("span",{className:"ident"},"requires_vocab"),"() \u2011>\xa0bool",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationDataset-requires_vocab",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L35-L37",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"HFGenerationSampleEncoder"},"HFGenerationSampleEncoder"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"HFGenerationSampleEncoder"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L93-L150",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Subclasses (2)"),(0,l.kt)("div",null,(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{title:"DecHFGenerationSampleEncoder",href:"/docs/api/data/dataset/hf/generation#DecHFGenerationSampleEncoder"},"DecHFGenerationSampleEncoder")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{title:"EncDecHFGenerationSampleEncoder",href:"/docs/api/data/dataset/hf/generation#EncDecHFGenerationSampleEncoder"},"EncDecHFGenerationSampleEncoder"))))),(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L93-L150",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-get_batching_fields"},"get_batching_fields"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_batching_fields"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0List[str]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-get_batching_fields",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L133-L134",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-get_fields_batcher"},"get_fields_batcher"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_fields_batcher"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Callable]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-get_fields_batcher",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L139-L140",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-get_tokenizer_max_length"},"get_tokenizer_max_length"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"get_tokenizer_max_length"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),") \u2011>\xa0int",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-get_tokenizer_max_length",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L136-L137",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-group_elements_on_materializations"},"group_elements_on_materializations"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"group_elements_on_materializations"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0dataset_elements:\xa0List[Dict[str,\xa0Any]],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0List[List[Dict[str,\xa0Any]]]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-group_elements_on_materializations",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L147-L150",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-sample2elem_dict"},"sample2elem_dict"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"sample2elem_dict"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0sample:\xa0",(0,l.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),",",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Any]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-sample2elem_dict",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L142-L145",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"HFGenerationSampleEncoder-from_transformer_model"},"from_transformer_model"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("div",{className:"annotation"},"@classmethod"),"def ",(0,l.kt)("span",{className:"ident"},"from_transformer_model"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#HFGenerationSampleEncoder-from_transformer_model",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L94-L111",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h3",{id:"MBARTHFGenerationSampleEncoder"},"MBARTHFGenerationSampleEncoder"),(0,l.kt)("div",{className:"api__signature"},(0,l.kt)("p",null,"class ",(0,l.kt)("span",{className:"ident"},"MBARTHFGenerationSampleEncoder"),"()"),(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#MBARTHFGenerationSampleEncoder",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L231-L293",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("h4",{id:"MBARTHFGenerationSampleEncoder-init"},"_","_","init","_","_"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"__init__"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0transformer_model:\xa0str,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0additional_special_tokens:\xa0Optional[List[str]],",(0,l.kt)("br",null),")",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#MBARTHFGenerationSampleEncoder-init",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L231-L293",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__description"}),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"MBARTHFGenerationSampleEncoder-group_elements_on_materializations"},"group_elements_on_materializations"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"group_elements_on_materializations"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0dataset_elements:\xa0List[Dict[str,\xa0Any]],",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0List[List[Dict[str,\xa0Any]]]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#MBARTHFGenerationSampleEncoder-group_elements_on_materializations",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L282-L293",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))),(0,l.kt)("div",{className:"api"},(0,l.kt)("h4",{id:"MBARTHFGenerationSampleEncoder-sample2elem_dict"},"sample2elem_dict"),(0,l.kt)("div",{className:"api__signature"},"def ",(0,l.kt)("span",{className:"ident"},"sample2elem_dict"),"(",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0self,",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0sample:\xa0",(0,l.kt)("a",{title:"GenerationSample",href:"/docs/api/data/data_drivers#GenerationSample"},"GenerationSample"),",",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0inference_mode:\xa0bool,",(0,l.kt)("br",null),") \u2011>\xa0Dict[str,\xa0Any]",(0,l.kt)("div",{className:"links-div"},(0,l.kt)("a",{href:"#MBARTHFGenerationSampleEncoder-sample2elem_dict",className:"direct-link"},"#"),(0,l.kt)("a",{href:"https://github.com/sunglasses-ai/classy/blob/6ce778ab1cf4a13f0f122a345f15beab4809551f/classy/data/dataset/hf/generation.py#L238-L280",className:"git-link"},"#"))),(0,l.kt)("div",{className:"api__body"},(0,l.kt)("div",{className:"api__description"}))))))}k.isMDXComponent=!0}}]);